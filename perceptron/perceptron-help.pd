#N canvas 838 63 810 887 12;
#X obj 1 27 cnv 3 800 3 empty empty description 12 12 0 14 #7c7c7c #404040 0;
#X obj 1 92 cnv 3 800 3 empty empty inlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 83 97 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 1 309 cnv 3 800 3 empty empty outlets 8 12 0 13 #dcdcdc #000000 0;
#X obj 83 323 cnv 18 3 17 empty empty 0 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 83 362 cnv 18 3 17 empty empty 1 5 9 0 14 #dcdcdc #9c9c9c 0;
#X obj 1 389 cnv 3 800 3 empty empty example 8 12 0 13 #dcdcdc #000000 0;
#X obj 1 -1 cnv 3 800 3 empty empty perceptron 14 14 1 22 #7c7c7c #404040 0;
#X text 104 362 list:;
#X text 740 8 v.0.1.0;
#X text 111 154 learning: [float];
#X text 112 210 datasize: [integer];
#X text 112 247 reset: [message];
#X text 113 266 print: [message];
#X text 270 154 learning rate between 0 and 1 (default = 0.5);
#X text 612 35 Vinícius César de Oliveira;
#X obj 256 752 perceptron;
#X obj 323 774 route weights wbias error;
#X floatatom 323 842 5 0 0 1 updated\ weights - - 0;
#X floatatom 380 822 5 0 0 1 updated\ bias\ weight - - 0;
#X floatatom 437 801 5 0 0 1 amount\ of\ error\ per\ epoch - - 0;
#X floatatom 256 776 5 0 0 0 classification/linear\ regression - - 0;
#X obj 256 441 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X text 112 135 weights: [interger];
#X text 264 98 training mode - 0 = training mode off \, 1 = training mode on (default = 1), f 74;
#X text 112 173 bias: [float];
#X text 271 173 bias (default = 1), f 19;
#X text 112 191 threshold: [float];
#X text 271 191 step function threshold (default = 0.5);
#X text 113 228 epochs: [integer];
#X text 113 287 zero: [message];
#X text 271 287 sets all weights value to zero;
#N canvas 988 113 1144 823 dataset 0;
#X obj 407 324 text define \$0-dataset;
#X obj 62 306 text get \$0-dataset;
#X obj 62 180 until;
#X obj 62 218 f;
#X obj 140 234 + 1;
#X obj 140 176 sel 0;
#X obj 62 264 t f b;
#X obj 62 151 t b b;
#X obj 62 129 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 174 220 text size \$0-dataset;
#X obj 62 330 outlet;
#X obj 62 104 inlet;
#X obj 375 112 t b b;
#X obj 140 272 mod, f 5;
#X obj 375 88 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X msg 407 197 read data/iris-training.txt;
#X obj 375 65 loadbang;
#X obj 433 134 r classification;
#X obj 174 248 + 1;
#X msg 433 247 read data/iris-classification.txt;
#X obj 646 108 r training;
#X obj 646 132 sel 0 1;
#X obj 204 114 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X obj 203 92 inlet;
#X text 55 79 training;
#X text 197 74 classification;
#X msg 207 245 datasize \$1;
#X obj 207 270 s perceptron;
#X text 607 196 <- iris training dataset;
#X text 672 246 <- iris classification dataset;
#X text 572 324 <- open to see the dataset! features are sepal length and petal length of iris setosa (0) and iris versicolor (1), f 54;
#X connect 1 0 10 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 0 6 0;
#X connect 4 0 13 0;
#X connect 5 0 2 1;
#X connect 6 0 1 0;
#X connect 7 0 2 0;
#X connect 8 0 7 0;
#X connect 9 0 18 0;
#X connect 9 0 26 0;
#X connect 11 0 8 0;
#X connect 12 0 9 0;
#X connect 12 1 15 0;
#X connect 13 0 3 1;
#X connect 13 0 5 0;
#X connect 14 0 12 0;
#X connect 15 0 0 0;
#X connect 16 0 14 0;
#X connect 17 0 19 0;
#X connect 18 0 13 1;
#X connect 19 0 0 0;
#X connect 20 0 21 0;
#X connect 21 0 19 0;
#X connect 21 1 15 0;
#X connect 22 0 3 0;
#X connect 23 0 22 0;
#X connect 26 0 27 0;
#X restore 256 510 pd dataset;
#X text 111 99 training: [integer];
#X text 665 72 tested on pd-0.54-1;
#X text 111 116 regression: [integer];
#X text 264 116 regression mode - 0 = regression mode off \, 1 = regression mode on, f 74;
#X text 257 425 v;
#X text 257 415 |;
#X text 105 323 integer:;
#X text 174 323 outputs a binary classification after the training process (0 or 1) or linear regression if regression mode is on, f 79;
#X obj 323 487 bng 19 250 50 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000;
#X text 261 410 - input data for training (each bang = 1 training epoch);
#X text 326 470 v;
#X text 326 461 |;
#X obj 467 516 tgl 19 0 training empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X msg 467 539 training \$1;
#X floatatom 467 566 5 0 0 0 - - - 0;
#X msg 467 588 learning \$1;
#X msg 467 636 epochs \$1;
#X floatatom 467 615 5 0 0 0 - - - 0;
#X text 271 135 amount of weights (default = 2);
#X text 270 210 size of the input dataset - "amount of training example" (default 20), f 70;
#X text 270 247 reset the parameters;
#X text 272 264 print info: learning rate \, current epoch \, and current weights, f 70;
#N canvas 950 210 931 659 other-messages 0;
#X msg 293 130 weights \$1;
#X floatatom 293 109 5 0 0 0 - - - 0;
#X floatatom 327 161 5 0 0 0 - - - 0;
#X msg 327 183 bias \$1;
#X floatatom 385 275 5 0 0 0 - - - 0;
#X msg 385 297 datasize \$1;
#X floatatom 353 218 5 0 0 0 - - - 0;
#X msg 353 240 threshold \$1;
#X msg 241 78 regression \$1;
#X obj 241 56 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 241 498 outlet;
#X msg 429 331 reset;
#X msg 451 364 zero;
#X msg 466 399 print;
#X text 351 78 linear regression mode (0 = off \, 1 = on);
#X text 378 131 amount of sinaptical weights;
#X text 393 185 bias;
#X text 479 296 amount of training example;
#X text 481 330 reset perceptron hiperparameters;
#X text 496 363 sets all weights value to zero;
#X text 515 399 print all current hiperparameters;
#X obj 465 436 r perceptron;
#X text 453 239 step function threshold (min = 0 \, max = 1);
#X connect 0 0 10 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 4 0 5 0;
#X connect 5 0 10 0;
#X connect 6 0 7 0;
#X connect 7 0 10 0;
#X connect 8 0 10 0;
#X connect 9 0 8 0;
#X connect 11 0 10 0;
#X connect 12 0 10 0;
#X connect 13 0 10 0;
#X connect 21 0 10 0;
#X restore 469 663 pd other-messages;
#X text 271 228 amount of epochs for the perceptron stops learning (default = 100), f 67;
#X text 330 456 - input data for classification/linear regression;
#X text 360 474 (each bang = 1 test example);
#X text 26 793 0 = setosa;
#X text 26 812 1 = versicolor;
#X text 597 664 <- open for more messages;
#X text 272 426 (these example uses iris dataset);
#X text 33 55 implementation of the perceptron algorithm \, an artificial neuron model created by Frank Rosenblatt for binary classification tasks, f 66;
#X text 152 363 list with all updated parameters for each epoch (weights \, bias and amount of error), f 83;
#X connect 16 0 21 0;
#X connect 16 1 17 0;
#X connect 17 0 18 0;
#X connect 17 1 19 0;
#X connect 17 2 20 0;
#X connect 22 0 32 0;
#X connect 32 0 16 0;
#X connect 41 0 32 1;
#X connect 45 0 46 0;
#X connect 46 0 16 0;
#X connect 47 0 48 0;
#X connect 48 0 16 0;
#X connect 49 0 16 0;
#X connect 50 0 49 0;
#X connect 55 0 16 0;
